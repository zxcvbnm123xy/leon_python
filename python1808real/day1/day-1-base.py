"""
第一章 python的入门
"""
# 语言：人和人沟通的方式
# 计算机语言：人和计算机沟通的方式
# 利用计算机语言进行编程，让计算机按照人的指令工作。

"""
计算机语言按照级别分为：
机器语言：0 1 代码，高电位，低电位。
汇编语言：通过指令来编写的语言。add 2 3
高级语言: c   c++  .net  java   python   php
"""

"""
计算机语言的执行方式
编译执行：对于源文件，编译一次，编译成对应的二进制文件。
         优点：速度快
         缺点：可移植性差，对于同样的源文件来说，不同的操作系统编译出来的二进制文件不同。
         例子：c  c++
    
解释执行：对于源文件，使用解释器对代码进行逐行解释。不会编译形成二进制文件
         优点：可移植性好
         缺点：执行速度慢
         例子：python    javascript
"""
# java：即是解释型的语言，也是编译型的语言。
# 因为java的源文件会编译成字节码文件（不是二进制文件），java本身也具有java的解释器jvm，jvm是对
# 字节码文件进行的编译和解析。
# 执行速度不慢，可移植性又比较好。


#一、python的发展史
# python是荷兰的，龟叔的人
# ABC语言  失败  原因不开源
# 1989年圣诞节 决心开发新的语言python 特点开源

# 二、python的版本
# python2版本   2.7之后不再维护
# python3版本   目前已经到了3.7，讲课使用的是3.6


# 三、python的特点
# 1. 语法简洁
# 2. 既能面向对象也能面向过程
# 3. 是解释型的语言，有很好的跨平台性（可移植性）
# 4. 可扩展性
# 5. 具有丰富的资源库

# 缺点： 执行速度慢
#       代码不能加密

# 四、python的应用领域
"""
1. web应用开发 djangle
2. 网络爬虫 
3. 数据分析、科学计算、人工智能
4. 游戏编程 pygame
"""

# 五、python的开发环境
"""
1. 安装python  3.6版本
注意：勾选add path，安装路径明确（不要使用默认安装）

2. 安装pycharm：属于开发工具
注意：安装路径（最好不要默认安装）
      配置python解释器
"""
# 3. hello world
"""
两种方式：
（1）在命令行执行python，交互式执行
     方法：进入菜单---cmd进入控制台
          输入【python】（调用出python解释器）
          >>> 说明python在等待用户输入命令
          
     
（2）在命令行使用python，脚本（.py文件）执行
     方法：进入菜单---cmd进入控制台
          输入【python】（调用出python解释器）  python文件名+扩展名
     注意：.py文件必须在当前命令行的路径下
 
区别：
交互式执行相当于一行有行的输入源码，每输入一行就执行一行。
脚本式执行相当于一次性执行py文件中所有的源代码。
"""
# 目前我们开发或者学习过程中使用的pycharm开发工具

# 六、变量和常量
# 1.变量
# 定义：使用指定的名称（变量名）来绑定特定的值（变量值）
# 了解：不同的语言对于变量的赋值意义是不同的。
# python中的变量赋值：相当于给变量值起名字（类似于给变量值贴标签）
# java中的变量赋值：真正使用变量名为内存，变量值就存在变量名的内存里。
# python中变量定义的格式：变量名=变量值   （=不是数学意义上相等，在计算机语言里，代表的是赋值）
a="hello world"
"""
可以看成给hello world 贴了一个标签a。
还可以看成将a绑定到helloworld字符串上。
在计算机的内存中，相当于a是key ，value是hello world的内存地址。
"""

"""
a="hello world"
计算机中会执行的内容：
（1）在内存中创建内存存储"hello world"
（2）在内存中创建内存存储a
（3）将a的value存储成hello world的内存地址（画图的时候使用一条线表示）
"""

# 多个变量指向同一个内存地址
# 因为在python中，是基于值的内存管理，所以对于（数值、字符串、字节、布尔）只存储一份
a="hello world"
b="hello world"

# 修改变量的绑定
# 可以对已经存在的变量进行重新赋值
# 同一个变量名不能绑定多个变量值
# 对于同一变量值来说，可以使用多个变量名绑定
# python的变量可以绑定任何类型的数据。
a="python"
print(a)
a=1
print(a)

"""
动态语言和静态语言
"""
# 动态语言：给变量赋值或者给变量定义的时候，不需要考虑变量的类型，变量类型不固定的语言。python
# 静态语言：一旦给变量进行了某种类型的赋值或者绑定之后，不可以再绑定其他类型的数据。

"""
强类型语言和弱类型语言
"""
# 强类型语言：（强制数据类型），一旦一个变量被指定了某一个数据类型，如果不经过强制转换（重新赋值）
#            则没有办法改成其他的类型。 python
# a=1
# print(1+"aa")

# 弱类型的语言：一旦一个变量被定义成 一个数据类型，不需要强制转换，使用的时候直接转换成其他的的数据类型
# php是弱类型的语言
# $n=1
# $n+"new"

# python是动态强类型的语言。


# python变量赋值时候的简便使用
# （1） 同时为多个变量赋值
x=3
y=3
z=3
x=y=z=3
# print(x,y,z)
# （2）平行赋值
x=1
y=2
z=3
x,y,z=1,2,3
# print(x,y,z)

# 应用：数据交换
a=4
b=10
# 如果希望a中存的是10，b中存的是4.（不能直接使用a=10,b=4）
# 初学者容易犯的错误
# a=b
# b=a
# print(a,b)
# 代码麻烦，内存中就是中是这样处理的，需要掌握
# temp=a
# a=b
# b=temp

# 简洁化
# a,b=b,a
# print(a,b)



# 变量的删除：
# 语法：del 变量名
a=5
print(a)
del a
# print(a)  # NameError a变量还没有被定义（赋值、创建）
# 注意，删除变量的时候，只能删除变量名，不能删除变量值。变量值只能依赖于垃圾回收机制删除。
# 垃圾回收机制：当执行完当前的py文件之后，垃圾回收机制会将内存中的不使用的内存片删除。

# 变量的名：（标识符）
"""
(1)必须使用字符（建议英文），数字，下划线组合，并且不可以使用数字开头
(2)不能是关键字
(3)变量赋值时可以不关心变量的类型
(4)变量使用之前必须赋值。只有在赋值之后，变量才能创建。
   （变量使用之前必须要声明，错误）
"""
p=None  # 目前只需要 理解p指向None的时候，相当于没有变量值就可以了。
print(p)





# 2.常量
# 其实常量也是一种变量，只不过是比较特殊的变量
# (1)普通常量：常量的名字全部使用大写。
# 作用：相当于标识当前的变量值不能改。
# python程序的程序员靠自觉性。
PI=3.14159

#(2)None 特殊常量，是python内置的常量值，标识的变量值的缺失
a=None
print(type(a))
a=""
print(type(a))
b=None
print(type(b))



#七、输入输出
# 1. 输出
# （1）
# print(内容,...)
print(1,2,3)
print("helloworld")
# （2）. 结尾字符(两个print之间) print 默认的结尾字符\n
# 可以使用end关键字修改
print(1,2,3,end="")
print("helloworld")

# （3）.分隔字符的设置(单个print中，多个元素使用的连接字符)，默认的是空格
# 可以sep关键字进行修改
print(1,2,3,sep="")
print(1,2,3,sep="-")

# 2.输入：执行input的时候，程序会阻塞，等待用户的输入
# input("提示信息")
# name=input("请输入你的名字")
# print("刚刚输入的名字是",name)

# 小游戏，猜数字
realvalue=10
# "10"  10
guess=int(input("请输入你猜的数字是什么"))
if realvalue==guess:
    print("猜对了")
    print("猜对了中午请你吃饭")
else:
    print("猜错了")